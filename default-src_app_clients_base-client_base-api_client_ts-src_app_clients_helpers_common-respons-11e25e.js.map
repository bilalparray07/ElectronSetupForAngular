{"version":3,"file":"default-src_app_clients_base-client_base-api_client_ts-src_app_clients_helpers_common-respons-11e25e.js","mappings":"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","sources":["./src/app/clients/base-client/base-api.client.ts","./src/app/clients/helpers/common-response-code-handler.helper.ts","./src/app/clients/helpers/common-utils.helper.ts","./src/app/clients/helpers/storage-cache.helper.ts","./src/app/models/internal/additional-request-details.ts","./src/app/models/internal/cache-item.ts","./src/app/models/service/api-contracts/base/api-response.ts","./src/app/models/service/api-contracts/error-data.ts","./src/app/models/service/enums/api-error-type-s-m.enum.ts","./node_modules/flatted/esm/index.js"],"sourcesContent":["import { AxiosResponse, Method } from 'axios';\r\nimport { AdditionalRequestDetails, Authentication } from '../../models/internal/additional-request-details';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { AppConstants } from '../../../app-constants';\r\nimport { StorageCache } from '../helpers/storage-cache.helper';\r\nimport { environment } from 'src/environments/environment';\r\nimport { BaseAjaxClient } from './base-ajax.client';\r\nimport { IDictionaryCollection } from 'src/app/models/internal/Idictionary-collection';\r\nimport { DictionaryCollection } from 'src/app/models/internal/dictionary-collection';\r\nimport { ApiRequest } from 'src/app/models/service/api-contracts/base/api-request';\r\nimport { ApiResponse } from 'src/app/models/service/api-contracts/base/api-response';\r\nimport { ErrorData } from 'src/app/models/service/api-contracts/error-data';\r\nimport { QueryFilter } from 'src/app/models/service/api-contracts/query-filter';\r\nimport { ApiErrorTypeSM } from 'src/app/models/service/enums/api-error-type-s-m.enum';\r\nimport { CommonResponseCodeHandler } from '../helpers/common-response-code-handler.helper';\r\nimport { CommonUtils } from '../helpers/common-utils.helper';\r\n\r\nexport abstract class BaseApiClient extends BaseAjaxClient {\r\n\r\n    constructor(protected storageservice: StorageService,\r\n        protected storageCacheHelper: StorageCache, private commonResponseCodeHandler: CommonResponseCodeHandler) {\r\n        super();\r\n    }\r\n    protected GetResponseAsync = async <InReq, OutResp>(relativeUrl: string, reqMethod: Method = 'GET', reqBody: ApiRequest<InReq> | null = null,\r\n        additionalRequestDetails: AdditionalRequestDetails<OutResp> = new AdditionalRequestDetails<OutResp>(false))\r\n        : Promise<ApiResponse<OutResp>> => {\r\n\r\n        let responseEntity: ApiResponse<OutResp> | null = null;\r\n        let axiosResp: AxiosResponse<any> | null = null;\r\n        ;\r\n\r\n        if (additionalRequestDetails == null)\r\n            throw new Error('AdditionalRequestDetails cannot be null, do not pass if not required.');\r\n\r\n        try {\r\n            const fullUrlToHit = CommonUtils.CombineUrl(environment.apiBaseUrl, relativeUrl);\r\n            responseEntity = await this.storageCacheHelper.GetResponseFromDbIfPresent<OutResp>(\r\n                fullUrlToHit, reqMethod, additionalRequestDetails);\r\n            if (responseEntity != null)\r\n                return responseEntity;\r\n            else {\r\n                // add headers and all. and call base Ajax\r\n                additionalRequestDetails.headers = await this.AddCommonHeaders(additionalRequestDetails.headers);\r\n                if (additionalRequestDetails.enableAuth === Authentication.true) {\r\n                    let token: string = await this.storageservice.getDataFromAnyStorage(AppConstants.DbKeys.ACCESS_TOKEN);\r\n                    if (token == null || token === '')\r\n                        throw new Error(`Token not found for URL - '${relativeUrl}'.`);\r\n                    else\r\n                        additionalRequestDetails.headers.Add('Authorization', 'Bearer ' + token);\r\n                }\r\n                if (reqMethod === 'GET') {\r\n                    // validations\r\n                    // eg no body, proper url etc\r\n                } else if (reqMethod === 'POST') {\r\n                    // validations\r\n                }\r\n                else if (reqMethod === 'DELETE') {\r\n                    // validations\r\n                }\r\n\r\n                axiosResp = await this.GetHttpDataAsync<ApiRequest<InReq>>(\r\n                    fullUrlToHit, reqMethod, reqBody, additionalRequestDetails.headers, additionalRequestDetails.contentType);\r\n\r\n                if (this.commonResponseCodeHandler.handlerDict.Keys().includes(axiosResp.status.toString())) {\r\n                    let errMessage = this.commonResponseCodeHandler.handlerDict.Item(axiosResp.status.toString())(axiosResp)\r\n                    return this.CreateGenericApiResponseObject(errMessage);\r\n                }\r\n\r\n                responseEntity = await this.CreateResponseEntityFromAxiosResp<OutResp>(\r\n                    axiosResp, additionalRequestDetails.custRespResolver);\r\n                if (responseEntity == null) { throw new Error('Null Response Formed.'); }\r\n\r\n\r\n                // add response to cache if applicable\r\n                await this.storageCacheHelper.AddOrUpdateResponseInCacheIfApplicable<OutResp>(\r\n                    fullUrlToHit, reqMethod, additionalRequestDetails, responseEntity);\r\n                return responseEntity;\r\n            }\r\n\r\n        } catch (x) {\r\n            let msg = '';\r\n            if (x instanceof Error)\r\n                msg = x.message;\r\n            else\r\n                msg = JSON.stringify(x);\r\n            const resp = this.CreateGenericApiResponseObject<OutResp>(msg);\r\n            resp.axiosResponse = axiosResp;\r\n            return resp;\r\n        }\r\n    }\r\n    private CreateResponseEntityFromAxiosResp = async<OutResp>(axiosResp: AxiosResponse,\r\n        respResolver: ((resp: AxiosResponse) => ApiResponse<OutResp>) | null): Promise<ApiResponse<OutResp> | null> => {\r\n\r\n        let retObject: ApiResponse<OutResp> | null = null;\r\n        if (this.IsSuccessCode(axiosResp.status)) {\r\n            if (respResolver != null) {\r\n                const data = respResolver(axiosResp);\r\n                data.axiosResponse = axiosResp;\r\n                retObject = data;\r\n            } else {\r\n                const data = axiosResp.data as ApiResponse<OutResp>; // need to check this how to remove additional props\r\n                data.axiosResponse = axiosResp;\r\n                retObject = data;\r\n            }\r\n        } else {\r\n            // either response has boday as formatted response or not.\r\n            if (axiosResp.data != null && axiosResp.data.isError !== undefined) {\r\n                retObject = axiosResp.data as ApiResponse<OutResp>;\r\n                retObject.axiosResponse = axiosResp;\r\n            }\r\n        }\r\n\r\n        if (retObject == null) {\r\n            retObject = this.CreateGenericApiResponseObject<OutResp>(`Unknown error occured - status code '${axiosResp.status}'`);\r\n            retObject!.axiosResponse = axiosResp;\r\n        }\r\n        return retObject;\r\n\r\n    }\r\n    protected CreateGenericApiResponseObject = <OutResp>(addMsg: string): ApiResponse<OutResp> => {\r\n        const resp = new ApiResponse<OutResp>();\r\n        resp.isError = true;\r\n        resp.errorData = new ErrorData();\r\n        resp.errorData.displayMessage = addMsg;\r\n        resp.errorData.apiErrorType = ApiErrorTypeSM.FrameworkException_Log;\r\n        return resp;\r\n    }\r\n    protected ApplyQueryFilterToUrl(currentUrlToHit: string, queryFilter?: QueryFilter | null): string {\r\n\r\n        if (queryFilter === undefined || queryFilter === null) {\r\n            return currentUrlToHit;\r\n        }\r\n        let urlQuery: string = '';\r\n        //code for search, orderby etc to be added needs to be as per the odata query format        \r\n        if (queryFilter.skip >= 0 && queryFilter.top > 0)\r\n            urlQuery += `$skip=${queryFilter.skip}&$top=${queryFilter.top}`;\r\n\r\n        if (queryFilter.searchText != null && queryFilter.searchText != undefined && queryFilter.searchText.length > 0) {\r\n            if (urlQuery != '' && urlQuery.length > 0)\r\n                urlQuery += '&';\r\n            urlQuery += `search=${queryFilter.searchText}`;\r\n        }\r\n        // add other query like orderby etc as per odata\r\n        if (currentUrlToHit.indexOf('?') > 0)\r\n            currentUrlToHit = `${currentUrlToHit}&${urlQuery}`;\r\n        else\r\n            currentUrlToHit = `${currentUrlToHit}?${urlQuery}`;\r\n\r\n        return currentUrlToHit;\r\n    }\r\n    private async AddCommonHeaders(commonHeaders: IDictionaryCollection<string, string> | null): Promise<IDictionaryCollection<string, string>> {\r\n        if (commonHeaders == null)\r\n            commonHeaders = new DictionaryCollection<string, string>();\r\n        commonHeaders.Add(AppConstants.HeadersName.ApiType, AppConstants.HeadersValue.ApiType);\r\n        commonHeaders.Add(AppConstants.HeadersName.DevApk, AppConstants.HeadersValue.DevApk);\r\n        commonHeaders.Add(AppConstants.HeadersName.AppVersion, AppConstants.HeadersValue.AppVersion);\r\n        // //cors headers\r\n        // if (environment.enableCORSHeaders) {\r\n        //     commonHeaders.Add(AppConstants.HeadersName.CORS_ALLOW_CREDENTIALS, AppConstants.HeadersValue.CORS_ALLOW_CREDENTIALS);\r\n        //     commonHeaders.Add(AppConstants.HeadersName.CORS_ALLOW_METHODS, AppConstants.HeadersValue.CORS_ALLOW_METHODS);\r\n        //     commonHeaders.Add(AppConstants.HeadersName.CORS_ALLOW_ORIGIN, AppConstants.HeadersValue.CORS_ALLOW_ORIGIN);\r\n        // }\r\n        return commonHeaders;\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { AxiosResponse } from 'axios';\r\nimport { Injectable } from '@angular/core';\r\nimport { AppConstants } from '../../../app-constants';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from '../../services/storage.service';\r\nimport { IDictionaryCollection } from 'src/app/models/internal/Idictionary-collection';\r\nimport { DictionaryCollection } from 'src/app/models/internal/dictionary-collection';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CommonResponseCodeHandler {//dont extend from base\r\n\r\n    public handlerDict: IDictionaryCollection<string, (resp: AxiosResponse) => string>;\r\n\r\n    constructor( private router: Router,\r\n        private storageService: StorageService) {\r\n        // add common functions here\r\n        this.handlerDict = new DictionaryCollection<string, (resp: AxiosResponse) => string>();\r\n        this.AddCommonHandlers();\r\n    }\r\n\r\n    async AddCommonHandlers() {\r\n        this.handlerDict.Add('401', (resp) => {\r\n            // this.commonService.presentToast(AppConstants.ErrorPrompts.Unauthorized_User);\r\n            this.router.navigate(['home-page']);\r\n            this.storageService.removeFromStorage(AppConstants.DbKeys.ACCESS_TOKEN);\r\n            return AppConstants.ErrorPrompts.Unauthorized_User;\r\n        });\r\n    }\r\n\r\n}\r\n","\r\nexport class CommonUtils {\r\n\r\n    static CombineUrl = (urlPart1: string, urlPart2: string): string => {\r\n\r\n        let p1 = urlPart1.trim();\r\n        if (p1.endsWith('/')) {\r\n            p1 = p1.substring(0, p1.length - 1);\r\n        }\r\n\r\n        let p2 = urlPart2.trim();\r\n        if (p2.startsWith('/')) {\r\n            p2 = p2.substring(1);\r\n        }\r\n        return p1 + '/' + p2;\r\n    }\r\n}","import { environment } from 'src/environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { AdditionalRequestDetails } from '../../models/internal/additional-request-details';\r\nimport { Method } from 'axios';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { AppConstants } from 'src/app-constants';\r\nimport * as Flatted from 'flatted';\r\nimport { CommonLogger } from './common-logger.helper';\r\nimport { CacheItem } from 'src/app/models/internal/cache-item';\r\nimport { ApiResponse } from 'src/app/models/service/api-contracts/base/api-response';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class StorageCache {//dont extend from base\r\n    constructor(private storageService: StorageService) {\r\n    }\r\n\r\n    public GetResponseFromDbIfPresent = async<OutResp>(fullUrlToHit: string,\r\n        reqMethod: Method, additionalRequestDetails: AdditionalRequestDetails<OutResp>)\r\n        : Promise<ApiResponse<OutResp> | null> => {\r\n        if (!environment.enableResponseCacheProcessing)\r\n            return null;\r\n        if (additionalRequestDetails.useCacheIfPossible && !additionalRequestDetails.forceGetResponseFromApi\r\n            && reqMethod === 'GET') {\r\n            let cacheItem = await this.GetCacheItemIfPresent<ApiResponse<OutResp>>(fullUrlToHit);\r\n            if (cacheItem != null) {\r\n                return cacheItem;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public AddOrUpdateResponseInCacheIfApplicable = async<OutResp>(fullUrlToHit: string,\r\n        reqMethod: Method, additionalRequestDetails: AdditionalRequestDetails<OutResp>, responseEntity: ApiResponse<OutResp>)\r\n        : Promise<boolean> => {\r\n        if (!environment.enableResponseCacheProcessing)\r\n            return false;\r\n        if (additionalRequestDetails.useCacheIfPossible && reqMethod === 'GET'\r\n            && responseEntity.axiosResponse?.status === 200 && !responseEntity.isError) {\r\n            this.AddOrUpdateCacheItem<ApiResponse<OutResp>>(fullUrlToHit, responseEntity);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    protected GetCacheItemIfPresent = async<T>(key: string): Promise<T | null> => {\r\n        if (key == null)\r\n            return null;\r\n        let cacheMap = await this.GetMapFromDb();\r\n        if (cacheMap.has(key)) {\r\n            const cacheItem = cacheMap.get(key);\r\n            if (cacheItem != null) {\r\n                if (cacheItem.ValidUptoDateTimeTicks >= new Date().valueOf()) {\r\n                    let item = cacheItem.Data as T;\r\n                    if (environment.LoggingInfo.cacheLogs)\r\n                        CommonLogger.LogTextOrObject(`StorageCache - Response Returned form cache -- '${key}'`);\r\n                    return item;\r\n                }\r\n                else {\r\n                    if (environment.LoggingInfo.cacheLogs)\r\n                        CommonLogger.LogTextOrObject(`StorageCache - Cache object expired -- '${key}'`);\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    protected AddOrUpdateCacheItem = async<T>(key: string, data: T, cacheTimeout = 0): Promise<boolean> => {\r\n        if (key != null && data != null) {\r\n            let cacheMap: Map<string, CacheItem> | null = null;\r\n            cacheMap = await this.GetMapFromDb();\r\n\r\n            if (cacheMap.has(key)) {\r\n                if (environment.LoggingInfo.cacheLogs)\r\n                    CommonLogger.LogTextOrObject(`StorageCache - Old Key Deleted -- '${key}'`);\r\n                cacheMap.delete(key);\r\n            }\r\n            this.RemoveExpiredKeys(cacheMap);\r\n            const cacheItem = new CacheItem();\r\n            let currDate = new Date();\r\n            cacheItem.CreatedDateTimeTicks = currDate.valueOf();\r\n            cacheTimeout = cacheTimeout === 0 ? environment.apiResponseCacheTimeoutInMinutes : cacheTimeout;\r\n            currDate.setMinutes(currDate.getMinutes() + cacheTimeout);\r\n            cacheItem.ValidUptoDateTimeTicks = currDate.valueOf();\r\n            cacheItem.AccessKey = key;\r\n            cacheItem.Data = data;\r\n            cacheMap.set(key, cacheItem);\r\n\r\n            if (environment.LoggingInfo.cacheLogs)\r\n                CommonLogger.LogTextOrObject(`StorageCache - New Key Added -- '${key}'`);\r\n\r\n            await this.SaveOrUpdateMapInDb(cacheMap);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private RemoveExpiredKeys = (cacheMap: Map<string, CacheItem>): void => {\r\n\r\n        if (cacheMap != null) {\r\n            let keysToDel: Array<string> = [];\r\n            cacheMap.forEach((item, key) => {\r\n                if (item != null && item.ValidUptoDateTimeTicks <= new Date().valueOf())\r\n                    keysToDel.push(key);\r\n            });\r\n            keysToDel.forEach(key => {\r\n                if (environment.LoggingInfo.cacheLogs)\r\n                    CommonLogger.LogTextOrObject(`StorageCache - Item deleted after expiry -- '${key}'`);\r\n                cacheMap.delete(key);\r\n            });\r\n        }\r\n    }\r\n\r\n    private GetMapFromDb = async (): Promise<Map<string, CacheItem>> => {\r\n        let cacheMap: Map<string, CacheItem> | null = null;\r\n        let cacheMapTxt: string | null = await this.storageService.getFromStorage(AppConstants.DbKeys.API_RESP_CACHE);\r\n        if (cacheMapTxt != null && cacheMapTxt !== '')\r\n            cacheMap = new Map<string, CacheItem>(Flatted.parse(cacheMapTxt));\r\n\r\n        if (cacheMap != null && !(cacheMap instanceof Map))\r\n            cacheMap = null;\r\n\r\n        return cacheMap == null ? new Map<string, CacheItem>() : cacheMap;\r\n    }\r\n\r\n    private SaveOrUpdateMapInDb = async (cacheMap: Map<string, CacheItem>): Promise<boolean> => {\r\n        let cacheMapTxt = Flatted.stringify(Array.from(cacheMap.entries()));\r\n        await this.storageService.saveToStorage(AppConstants.DbKeys.API_RESP_CACHE, cacheMapTxt);\r\n        return true;\r\n    }\r\n}\r\n\r\n","import { AxiosResponse } from 'axios';\r\nimport { ApiResponse } from '../service/api-contracts/base/api-response';\r\nimport { IDictionaryCollection } from './Idictionary-collection';\r\n\r\n\r\nexport enum Authentication {\r\n    true,\r\n    false\r\n}\r\nexport class AdditionalRequestDetails<OutResp> {\r\n\r\n    constructor(useCacheIfPossible: boolean, enableAuth: Authentication = Authentication.true) {\r\n        this.useCacheIfPossible = useCacheIfPossible;\r\n        this.enableAuth = enableAuth;\r\n    }\r\n    enableAuth = Authentication.true;\r\n    useCacheIfPossible = false;\r\n    forceGetResponseFromApi = false;\r\n    headers: IDictionaryCollection<string, string> | null = null;\r\n    contentType = 'application/json';\r\n    custRespResolver: ((resp: AxiosResponse) => ApiResponse<OutResp>) | null = null;\r\n}\r\n","\r\nexport class CacheItem {\r\n    CreatedDateTimeTicks: number = -1;\r\n    ValidUptoDateTimeTicks: number = -1;\r\n    AccessKey: string = '';\r\n    Data: any;\r\n}","import { ErrorData } from '../error-data';\r\n\r\nexport class ApiResponse<T> {\r\n    responseStatusCode!: number;\r\n    successData!: T;\r\n    isError!: boolean;\r\n    errorData!: ErrorData;\r\n    axiosResponse: any;\r\n}\r\n","import { ApiErrorTypeSM } from '../enums/api-error-type-s-m.enum';\r\n\r\nexport class ErrorData {\r\n    apiErrorType!: ApiErrorTypeSM;\r\n    displayMessage!: string;\r\n    additionalProps!: Map<string, Object>;\r\n}\r\n","export enum ApiErrorTypeSM {\r\n    Fatal_Log = 1,\r\n    Success_NoLog = 2,\r\n    InvalidToken_Log = 3,\r\n    FrameworkException_Log = 4,\r\n    InvalidInputData_Log = 5,\r\n    InvalidInputData_NoLog = 6,\r\n    NoRecord_Log = 7,\r\n    NoRecord_NoLog = 8,\r\n    ModelError_Log = 9,\r\n    ModelError_NoLog = 10,\r\n    Access_Denied_Log = 11,\r\n    Access_Denied_NoLog = 12\r\n}\r\n","/*! (c) 2020 Andrea Giammarchi */\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst {keys} = Object;\n\nconst Primitive = String;   // it could be Number\nconst primitive = 'string'; // it could be 'number'\n\nconst ignore = {};\nconst object = 'object';\n\nconst noop = (_, value) => value;\n\nconst primitives = value => (\n  value instanceof Primitive ? Primitive(value) : value\n);\n\nconst Primitives = (_, value) => (\n  typeof value === primitive ? new Primitive(value) : value\n);\n\nconst revive = (input, parsed, output, $) => {\n  const lazy = [];\n  for (let ke = keys(output), {length} = ke, y = 0; y < length; y++) {\n    const k = ke[y];\n    const value = output[k];\n    if (value instanceof Primitive) {\n      const tmp = input[value];\n      if (typeof tmp === object && !parsed.has(tmp)) {\n        parsed.add(tmp);\n        output[k] = ignore;\n        lazy.push({k, a: [input, parsed, tmp, $]});\n      }\n      else\n        output[k] = $.call(output, k, tmp);\n    }\n    else if (output[k] !== ignore)\n      output[k] = $.call(output, k, value);\n  }\n  for (let {length} = lazy, i = 0; i < length; i++) {\n    const {k, a} = lazy[i];\n    output[k] = $.call(output, k, revive.apply(null, a));\n  }\n  return output;\n};\n\nconst set = (known, input, value) => {\n  const index = Primitive(input.push(value) - 1);\n  known.set(value, index);\n  return index;\n};\n\nexport const parse = (text, reviver) => {\n  const input = $parse(text, Primitives).map(primitives);\n  const value = input[0];\n  const $ = reviver || noop;\n  const tmp = typeof value === object && value ?\n              revive(input, new Set, value, $) :\n              value;\n  return $.call({'': tmp}, '', tmp);\n};\n\nexport const stringify = (value, replacer, space) => {\n  const $ = replacer && typeof replacer === object ?\n            (k, v) => (k === '' || -1 < replacer.indexOf(k) ? v : void 0) :\n            (replacer || noop);\n  const known = new Map;\n  const input = [];\n  const output = [];\n  let i = +set(known, input, $.call({'': value}, '', value));\n  let firstRun = !i;\n  while (i < input.length) {\n    firstRun = true;\n    output[i] = $stringify(input[i++], replace, space);\n  }\n  return '[' + output.join(',') + ']';\n  function replace(key, value) {\n    if (firstRun) {\n      firstRun = !firstRun;\n      return value;\n    }\n    const after = $.call(this, key, value);\n    switch (typeof after) {\n      case object:\n        if (after === null) return after;\n      case primitive:\n        return known.get(after) || set(known, input, after);\n    }\n    return after;\n  }\n};\n\nexport const toJSON = any => $parse(stringify(any));\nexport const fromJSON = any => parse($stringify(any));\n"],"names":["AdditionalRequestDetails","Authentication","AppConstants","environment","BaseAjaxClient","DictionaryCollection","ApiResponse","ErrorData","ApiErrorTypeSM","CommonUtils","BaseApiClient","constructor","storageservice","storageCacheHelper","commonResponseCodeHandler","_this","this","GetResponseAsync","_ref","_asyncToGenerator","relativeUrl","reqMethod","reqBody","additionalRequestDetails","responseEntity","axiosResp","Error","fullUrlToHit","CombineUrl","apiBaseUrl","GetResponseFromDbIfPresent","headers","AddCommonHeaders","enableAuth","true","token","getDataFromAnyStorage","DbKeys","ACCESS_TOKEN","Add","GetHttpDataAsync","contentType","handlerDict","Keys","includes","status","toString","errMessage","Item","CreateGenericApiResponseObject","CreateResponseEntityFromAxiosResp","custRespResolver","AddOrUpdateResponseInCacheIfApplicable","x","msg","message","JSON","stringify","resp","axiosResponse","_x","apply","arguments","_ref2","respResolver","retObject","IsSuccessCode","data","isError","undefined","_x2","_x3","addMsg","errorData","displayMessage","apiErrorType","FrameworkException_Log","ApplyQueryFilterToUrl","currentUrlToHit","queryFilter","urlQuery","skip","top","searchText","length","indexOf","commonHeaders","HeadersName","ApiType","HeadersValue","DevApk","AppVersion","CommonResponseCodeHandler","router","storageService","AddCommonHandlers","navigate","removeFromStorage","ErrorPrompts","Unauthorized_User","i0","ɵɵinject","i1","Router","i2","StorageService","factory","ɵfac","providedIn","_class","urlPart1","urlPart2","p1","trim","endsWith","substring","p2","startsWith","Flatted","CommonLogger","CacheItem","StorageCache","enableResponseCacheProcessing","useCacheIfPossible","forceGetResponseFromApi","cacheItem","GetCacheItemIfPresent","AddOrUpdateCacheItem","_x4","_x5","_x6","_x7","_ref3","key","cacheMap","GetMapFromDb","has","get","ValidUptoDateTimeTicks","Date","valueOf","item","Data","LoggingInfo","cacheLogs","LogTextOrObject","_x8","_ref4","cacheTimeout","delete","RemoveExpiredKeys","currDate","CreatedDateTimeTicks","apiResponseCacheTimeoutInMinutes","setMinutes","getMinutes","AccessKey","set","SaveOrUpdateMapInDb","_x9","_x10","keysToDel","forEach","push","cacheMapTxt","getFromStorage","API_RESP_CACHE","Map","parse","_ref6","Array","from","entries","saveToStorage","_x11","$parse","$stringify","keys","Object","Primitive","String","primitive","ignore","object","noop","_","value","primitives","Primitives","revive","input","parsed","output","$","lazy","ke","y","k","tmp","add","a","call","i","known","index","text","reviver","map","Set","replacer","space","v","firstRun","replace","join","after","toJSON","any","fromJSON"],"sourceRoot":"webpack:///","x_google_ignoreList":[9]}